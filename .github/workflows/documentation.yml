name: Build and Deploy Multi-Site MkDocs

on:
  push:
    branches:
      - main
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [verifleet, fleethub, bamaka]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install mkdocs-material mkdocs-glightbox

      - name: Configure and Build ${{ matrix.target }}
        run: |
          TARGET=${{ matrix.target }}

          # Setze Farbe & Logo je nach Target
          case "$TARGET" in
            "verifleet")
              COLOR="#ff0000"
              HOVER="#ff0000"
              LOGO="verifleet-logo.svg"
              ;;
            "fleethub")
              COLOR="#189EDA"
              HOVER="#189EDA"
              LOGO="fleethub-logo.svg"
              ;;
            "bamaka")
              COLOR="#ff0000"
              HOVER="#ff0000"
              LOGO="bamaka-logo.svg"
              ;;
            *)
              echo "Unbekanntes Ziel: $TARGET"
              exit 1
              ;;
          esac

          # cp mkdocs.yml mkdocs.yml # wird benötigt, wenn es mehrere mkdocs.yml gibt

          # Passe mkdocs config an (falls nötig)
          # sed -i "s|site_name: .*|site_name: ${TARGET}|" mkdocs.yml
          sed -i "s|site_name: .*|site_name: Dokumentation|" mkdocs.yml
          sed -i "s|logo: assets/.*|logo: assets/${LOGO}|" mkdocs.yml
          sed -i "s|accent: .*|accent: ${COLOR}|" mkdocs.yml
          # Erzeuge stylesheets/extra.css mit der Ziel-Linkfarbe
          sed "s|__HOVER_COLOR__|${HOVER}|g" docs/stylesheets/extra.template.css > docs/stylesheets/extra.css
          sed "s|__LINK_COLOR__|${COLOR}|g" docs/stylesheets/extra.template.css > docs/stylesheets/extra.css

          # Build in Unterverzeichnis
          mkdocs build -f mkdocs.yml -d site/${TARGET}

      - name: Upload site-${{ matrix.target }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: site/${{ matrix.target }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download all built sites
        uses: actions/download-artifact@v4
        with:
          path: site

      - name: Flatten site structure
        run: |
          mkdir merged_site
          for dir in site/*; do
            name=$(basename "$dir")
            mv "$dir" "merged_site/$name"
          done

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./merged_site
          publish_branch: gh-pages
